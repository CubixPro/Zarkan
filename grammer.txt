3 piece shit
*****1. expression
*****2. term
*****3. factor
*****4. atom


expression    : keyword: var identifier EQ expr
              : comp-expr((AND | OR) comp-expr)*
              
comp-expr     : NOT comp-expr
              : arith_expr ((EE| LT| GT| LTE| GTE) arith_expr)

arith-expr    : term((plus|minus) term)*

term          : factor((mul|div) factor)*

factor        : (plus|minus) factor
              : power

power         :  call (POW factor)*    

call          : atom (lparen (expr(comma expr)*)? rparen)?

atom          : int | float | identifier | string
              : lparen expr rparen
              : if-expr rule
              : for-expr
              : while-expr
              : func definition

if-expr       : KEYWORD: if expr KEYWORD: then expr
              : {KEYWORD: elif expr KEYWORD: then expr}*
              : {KEYWORD: else expr}?

for-expr      : KEYWORD:for identifier EQ expr KEYWORD:to expr
                (KEYWORD:step expr)? KEYWORD:then expr

while-expr    : KEYWORD:while expr KEYWORD:then expr 

func-def      : KEYWORD:func identifier
                lparen (identifier(comma identifier)*)? rparen
                arrow expr


* = 0 or more
? = optional